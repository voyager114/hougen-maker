import os
from flask import Flask, request, render_template, jsonify
from openai import OpenAI  # ★ v1 クライアント

# ----- 方言ガイドライン辞書（詳細版） -----------------------------
DIALECT_GUIDE: dict[str, dict[str, str]] = {
    # ── ① 大阪弁 ────────────────────
    "大阪弁": {
        # 文章のノリ
        "トーン": "テンション高め・テンポ良く。ツッコミ調を許可。",
        # 語尾（末尾につける典型）
        "語尾": "丁寧語なら「ですやん」「〜でっせ」。常体なら「〜やで」「〜やんか」「〜で」",
        # 典型語彙置換
        "語彙": ("私→ワイ／ウチ,  あなた→あんた,  とても→めっちゃ, "
               "本当に→ホンマに,  〜している→〜しとる,  そうだよ→せやで"),
        # 敬語ポリシー
        "敬語": ("基本はフランクだが、目上には『〜でございますねん』など誇張敬語を許容。"),
        # その他
        "注意": ("『てにをは』はそのまま残す（を→を, に→に 等）。"
               "『マクド／ミスド』などローカル略語を優先。"),
    },

    # ── ② 博多弁（福岡）────────────────
    "博多弁": {
        "トーン": "やわらかく親しみやすい。語尾でニュアンスを調整。",
        "語尾": "〜ったい／〜ばい／〜と？／〜っちゃん。丁寧形は『〜ですばい』。",
        "語彙": ("とても→ばり,  びっくりした→ぎゃん驚いた, "
               "疲れた→きつか,  〜している→〜しとー,  大丈夫→だいじょーぶ"),
        "敬語": "基本タメ口。敬語を保つ場合でも語尾『〜ですばい』を付ける程度。",
        "注意": "語尾『〜と？』で疑問、『〜たい』で願望・完了。『ごとある』＝“っぽい”。"
    },

    # ── ③ 仙台弁（宮城）────────────────
    "仙台弁": {
        "トーン": "落ち着いた東北訛り。語尾を伸ばし気味。",
        "語尾": "〜だっちゃ／〜だべ／〜だず／〜すけ,  丁寧形は『〜ですねぇ』",
        "語彙": ("とても→いづい,  疲れた→こわい,  ちょっと→おしょす, "
               "怖い→おっかね,  しまう→ける"),
        "敬語": "標準語ベースで語尾だけ訛らせる（例『ありがとうございますだっちゃ』）。",
        "注意": "『ず』『べ』で断定や推量を表す。"
    },

    # ── ④ 津軽弁（青森）────────────────
    "津軽弁": {
        "トーン": "音が丸く子音が強め。難読になりやすいので短文推奨。",
        "語尾": "〜だべさ／〜だはんで／〜へば,  丁寧形は極力避ける",
        "語彙": ("あなた→な,  ここ→こご,  あそこ→あそご, "
               "とても→わんつか,  食べる→ける,  来る→くる→くるじゃ→くるじゃわ"),
        "敬語": "原則なし。代わりに語尾『〜でございますはんで』などジョーク可。",
        "注意": ("母音を落とす（『です』→『す』等）。"
               "読みやすさ優先で完全な訛りではなく“なんとなく”雰囲気を残す。")
    },
}
# -------------------------------------------------------------------
DIALECT_GUIDE["大阪弁"].update({
    "語尾_勧誘":
    "〜や、〜やで、〜かい？、〜へん？",
    "語尾_説明":
    "〜やねん、〜やで",
    "語尾_疑問":
    "〜なん？、〜やろ？、〜ちゃう？",
    "語尾_感嘆":
    "〜やんか！、〜でっせ！",
    "置換ルール": ("『行こう』→『行こか』, "
              "『遊びに行こう』→『遊び行こか』, "
              "『〜しましょう』→『〜しよか』")
})

client = OpenAI(api_key=os.environ["OPENAI_API_KEY"])
app = Flask(__name__)


@app.route("/")
def home():
    return render_template("index.html")


@app.route("/convert", methods=["POST"])
def convert():
    data = request.json
    text = data.get("text", "")
    dialect = data.get("dialect", "大阪弁")
    temperature = float(data.get("temperature", 0.3))

    # ----- 方言別ガイドライン -----
    guide = DIALECT_GUIDE.get(dialect, {})
    rules = "・" + "\n・".join(f"{k}: {v}" for k, v in guide.items())

    # ----- few‑shot 例 -----
    fewshot = [
        {
            "role": "user",
            "content": "標準語: 今日は暑いですね\n変換先方言: 大阪弁\n→"
        },
        {
            "role": "assistant",
            "content": "今日は暑いなぁ"
        },
    ]

    system_msg = ("あなたは優秀な日本語方言通訳です。"
                  "意味を変えずに語彙と語尾を自然に置換してください。\n"
                  f"{rules}")
    user_msg = f"標準語: {text}\n変換先方言: {dialect}\n→"

    resp = client.chat.completions.create(model="gpt-3.5-turbo",
                                          messages=[
                                              {
                                                  "role": "system",
                                                  "content": system_msg
                                              },
                                              *fewshot,
                                              {
                                                  "role": "user",
                                                  "content": user_msg
                                              },
                                          ],
                                          temperature=temperature,
                                          max_tokens=120)

    return jsonify({"result": resp.choices[0].message.content.strip()})


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
